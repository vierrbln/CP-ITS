;
;   physical.ini created by Spectral Tools for CompactTSVP 29.11.2007 15:32:30
;
;-------------------------------------------------------------------------------
;
;   CompactTSVP_physical.ini is a template for the physical layer configuration
;   file. It contains a section for each device type for the CompactTSVP /
;   PowerTSVP test system. Do not modify this file.
;
;   To configure your own system, modifiy the file "physical.ini" copying
;   the sections you need from this template. If there is more than one module
;   of the same type, append numbers to the section names to ensure that
;   they are unique by appending the slot number (e.g. [device->PMB_15]).
;   
;-------------------------------------------------------------------------------
;
;   The following table shows the PXI resource descriptors for the CompactTSVP
;   slot numbers. Note that the bus number following the keyword PXI
;   depends on the configuration of PCI bridges on your computer. It is
;   different for the CP304 and CP302 controllers and for PCI bridge solutions
;   like the StarFabric. In this case, use the device manager of Windows 2000
;   to find correct resource descriptor. It can be found in the "Location" field
;   of the device properties.
;
;   Format: PXI<bus>::<device>::<function>::INSTR
;
;   The PXI bus numbers in the following table are valid for the CP304 CPU.
;   For use with the CP302, add +1 to the segment number, i.e. PXI1:: -> PXI2::
;
;   Slot    Resource Descriptor
;   ---------------------------
;      1    (reserved for CPU)
;      2    (reserved for CPU)
;      3    PXI1::15::0::INSTR
;      4    PXI1::14::0::INSTR
;      5    PXI1::13::0::INSTR
;      6    PXI1::12::0::INSTR
;      7    PXI1::11::0::INSTR
;      8    PXI1::10::0::INSTR
;      9    PXI2::15::0::INSTR
;     10    PXI2::14::0::INSTR
;     11    PXI2::13::0::INSTR
;     12    PXI2::12::0::INSTR
;     13    PXI2::11::0::INSTR
;     14    PXI2::10::0::INSTR
;     15    PXI2::9::0::INSTR
;     16    (not a PXI slot)
;
;   The CAN resource descriptors have the following format:
;   CAN<board>::<controller>::<frame>::<slot>
;
;   <board> and <controller> are both 0 for TS-PSYS1.
;   <frame> corresponds with the frame number of the TS-PCA3 / TS-PWA3 for
;           front slots. Add +4 if the module is fitted into a rear slot.
;   <slot> is the slot number of the TS-PCA3 / TS-PWA3.
;
;-------------------------------------------------------------------------------

[Device->PIO2]
Description		= "TS-PIO2, Signal Analyzer Module"
Type			= PIO2
ResourceDesc		= PXI4::11::INSTR
DriverDLL		= rspio2.dll
DriverPrefix		= rspio2
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1"
SFTDll			= SFTMPIO2.DLL
SFTPrefix		= "SFTMPIO2"

[Device->PICT]
Description		= "TS-PICT, In-Circuit Test Extension Module, Slot number 9"
Type			= PICT
ResourceDesc		= PXI4::15::INSTR
DriverDLL		= rspict.dll
DriverPrefix		= rspict
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1"
SFTDll			= SFTMPICT.DLL
SFTPrefix		= "SFTMPICT"

[Device->PSAM]
Description		= "TS-PSAM, Source and Measurement Module, Slot number 8"
Type			= PSAM
ResourceDesc		= PXI3::10::INSTR
DriverDLL		= rspsam.dll
DriverPrefix		= rspsam
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1"
; Note: The self test DLL and prefix keywords must be removed for the
;       first TS-PSAM module, because it is already tested in the
;       basic self test.
;SFTDll			= SFTMPSAM.DLL
;SFTPrefix		= "SFTMPSAM"

[Device->PFG]
Description		= "TS-PFG, Arbitrary Function Generator Module, Slot number 7"
Type			= PFG
ResourceDesc		= PXI3::11::INSTR
DriverDLL		= rspfg.dll
DriverPrefix		= rspfg
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1, DriverSetup=ie1"
SFTDll			= SFTMPFG.DLL
SFTPrefix		= "SFTMPFG"

[Device->PDHT]
Description		= "TS-PHDT, Matrix Module, Slot number 14"
Type			= PHDT
ResourceDesc		= CAN0::0::1::14
DriverDLL		= rsphdt.dll
DriverPrefix		= rsphdt
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1"
SFTDll			= SFTMPHDT.DLL
SFTPrefix		= "SFTMPHDTHDT"

[Device->PMB_15]
Description		= "TS-PMB, Matrix Module, Slot number 15"
Type			= PMB
ResourceDesc		= CAN0::0::1::15
DriverDLL		= rspmb.dll
DriverPrefix		= rspmb
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1,DriverSetup=crAuto:1"
SFTDll			= SFTMPMB.DLL
SFTPrefix		= "SFTMPMB"

[Device->PSM1_16]
Description		= "TS-PSM1, Power Switch Module, Slot number 16"
Type			= PSM1
ResourceDesc		= CAN0::0::1::16
DriverDLL		= rspsm1.dll
DriverPrefix		= rspsm1
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1"
SFTDll			= SFTMPSM1.DLL
SFTPrefix		= "SFTMPSM1"

[Device->PSYS1]
Description		= "TS-PSYS1, System Module"
Type			= PSYS1
ResourceDesc		= CAN0::0::5::15
DriverDLL		= rspsys.dll
DriverPrefix		= rspsys
DriverOption		= "Simulate=0,RangeCheck=1,QueryInstrStatus=1,Cache=1"
SFTDll			= SFTMPSYS.DLL
SFTPrefix		= "SFTMPSYS"

[Device->COM1]
ResourceDesc		= COM1
Baudrate		= 0
Parity			= NONE
Handshake		= NONE
Databits		= 0
Stopbits		= 0

[Device->COM10]
ResourceDesc		= COM10
Baudrate		= 0
Parity			= NONE
Handshake		= NONE
Databits		= 0
Stopbits		= 0

; System I/O Channels
[io_channel->system]

; Device->PIO2
PIO2_CH1_IN = PIO2!CH1_IN
PIO2_CH1_1 = PIO2!CH1_1
PIO2_CH1_2 = PIO2!CH1_2
PIO2_CH2_IN = PIO2!CH2_IN
PIO2_CH2_1 = PIO2!CH2_1
PIO2_CH2_2 = PIO2!CH2_2
PIO2_CH3_IN = PIO2!CH3_IN
PIO2_CH3_1 = PIO2!CH3_1
PIO2_CH3_2 = PIO2!CH3_2
PIO2_CH4_IN = PIO2!CH4_IN
PIO2_CH4_1 = PIO2!CH4_1
PIO2_CH4_2 = PIO2!CH4_2
PIO2_CH5_IN = PIO2!CH5_IN
PIO2_CH5_1 = PIO2!CH5_1
PIO2_CH5_2 = PIO2!CH5_2
PIO2_CH6_IN = PIO2!CH6_IN
PIO2_CH6_1 = PIO2!CH6_1
PIO2_CH6_2 = PIO2!CH6_2
PIO2_CH7_IN = PIO2!CH7_IN
PIO2_CH7_1 = PIO2!CH7_1
PIO2_CH7_2 = PIO2!CH7_2
PIO2_CH8_IN = PIO2!CH8_IN
PIO2_CH8_1 = PIO2!CH8_1
PIO2_CH8_2 = PIO2!CH8_2
PIO2_CH9_IN = PIO2!CH9_IN
PIO2_CH9_1 = PIO2!CH9_1
PIO2_CH9_2 = PIO2!CH9_2
PIO2_CH10_IN = PIO2!CH10_IN
PIO2_CH10_1 = PIO2!CH10_1
PIO2_CH10_2 = PIO2!CH10_2
PIO2_CH11_IN = PIO2!CH11_IN
PIO2_CH11_1 = PIO2!CH11_1
PIO2_CH11_2 = PIO2!CH11_2
PIO2_CH12_IN = PIO2!CH12_IN
PIO2_CH12_1 = PIO2!CH12_1
PIO2_CH12_2 = PIO2!CH12_2
PIO2_CH13_IN = PIO2!CH13_IN
PIO2_CH13_1 = PIO2!CH13_1
PIO2_CH13_2 = PIO2!CH13_2
PIO2_CH14_IN = PIO2!CH14_IN
PIO2_CH14_1 = PIO2!CH14_1
PIO2_CH14_2 = PIO2!CH14_2
PIO2_CH15_IN = PIO2!CH15_IN
PIO2_CH15_1 = PIO2!CH15_1
PIO2_CH15_2 = PIO2!CH15_2
PIO2_CH16_IN = PIO2!CH16_IN
PIO2_CH16_1 = PIO2!CH16_1
PIO2_CH16_2 = PIO2!CH16_2
PIO2_LO = PIO2!LO
PIO2_AGND = PIO2!AGND

; Device->PSAM
PSAM_DMM_HI = PSAM!DMM_HI
PSAM_DMM_LO = PSAM!DMM_LO
PSAM_DMM_SHI = PSAM!DMM_SHI
PSAM_DMM_SLO = PSAM!DMM_SLO
PSAM_DCH_HI = PSAM!DCH_HI
PSAM_RACOM = PSAM!RACOM
PSAM_RACH1 = PSAM!RACH1
PSAM_RACH2 = PSAM!RACH2
PSAM_RACH3 = PSAM!RACH3
PSAM_RACH4 = PSAM!RACH4
PSAM_RBCOM = PSAM!RBCOM
PSAM_RBCH1 = PSAM!RBCH1
PSAM_RBCH2 = PSAM!RBCH2
PSAM_RBCH3 = PSAM!RBCH3
PSAM_RBCH4 = PSAM!RBCH4

; Device->PFG
PFG_CH1_Hi = PFG!CH1_Hi
PFG_CH1_Lo = PFG!CH1_Lo
PFG_CH2_Hi = PFG!CH2_Hi
PFG_CH2_Lo = PFG!CH2_Lo

; Device->PSYS1
PSYS1_Trig0No = PSYS1!Trig0No
PSYS1_Trig0Com = PSYS1!Trig0Com
PSYS1_Trig1No = PSYS1!Trig1No
PSYS1_Trig1Com = PSYS1!Trig1Com
PSYS1_Trig2No = PSYS1!Trig2No
PSYS1_Trig2Com = PSYS1!Trig2Com
PSYS1_Trig3No = PSYS1!Trig3No
PSYS1_Trig3Com = PSYS1!Trig3Com
PSYS1_Trig4No = PSYS1!Trig4No
PSYS1_Trig4Com = PSYS1!Trig4Com
PSYS1_Trig5No = PSYS1!Trig5No
PSYS1_Trig5Com = PSYS1!Trig5Com
PSYS1_Trig6No = PSYS1!Trig6No
PSYS1_Trig6Com = PSYS1!Trig6Com
PSYS1_Trig7No = PSYS1!Trig7No
PSYS1_Trig7Com = PSYS1!Trig7Com
PSYS1_Out0No = PSYS1!Out0No
PSYS1_Out0Com = PSYS1!Out0Com
PSYS1_Out1No = PSYS1!Out1No
PSYS1_Out1Com = PSYS1!Out1Com
PSYS1_4_5VNo = PSYS1!11_5VNo
PSYS1_4_5VCom = PSYS1!11_5VCom
PSYS1_11_5VNo = PSYS1!11_5VNo
PSYS1_11_5VCom = PSYS1!11_5VCom

; Analogbus
ABa1	  =  ABUS!ABa1
ABa2	  =  ABUS!ABa2
ABb1	  =  ABUS!ABb1
ABb2	  =  ABUS!ABb2
ABc1	  =  ABUS!ABc1
ABc2	  =  ABUS!ABc2
ABd1	  =  ABUS!ABd1
ABd2	  =  ABUS!ABd2

; the analog bus entry is mandatory if the switch manager or EGTSL is used
[device->ABUS]
Description		= "Analog Bus"
Type			= AB

;
; EOF
;